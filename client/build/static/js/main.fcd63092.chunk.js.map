{"version":3,"sources":["components/Landing/Landing.js","redux/actions.js","App.js","reportWebVitals.js","index.js"],"names":["connect","dispatch","getDiets","axios","get","then","res","type","payload","data","catch","err","console","error","getRecipes","useEffect","className","id","to","App","exact","path","component","landing","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAiCeA,kBAAQ,MAPvB,SAA4BC,GAC1B,MAAO,CACLC,SAAU,kBAAMD,GCqCX,SAAUA,GACfE,IAAMC,IAAI,UACPC,MAAK,SAAAC,GAAG,OAAIL,EAAS,CACpBM,KAAM,YACNC,QAASF,EAAIG,UAEbC,OAAM,SAAAC,GACNC,QAAQC,MAAMF,UD3ClBG,WAAY,kBAAMb,GCzBb,SAAUA,GACfE,IAAMC,IAAI,WACPC,MAAK,SAAAC,GAAG,OAAIL,EAAS,CACpBM,KAAM,cACNC,QAASF,EAAIG,UAEbC,OAAM,SAAAC,GACNC,QAAQC,MAAMF,aDsBPX,EA1Bf,YAAkD,IAAzBc,EAAwB,EAAxBA,WAAYZ,EAAY,EAAZA,SAKnC,OAJAa,qBAAU,WACRD,IACAZ,MACC,CAACY,EAAYZ,IAEd,qBAAKc,UAAU,cAAf,SACE,sBAAKC,GAAG,OAAR,UACA,oBAAIA,GAAG,WAAP,0BACA,wBAAQA,GAAG,aAAX,SACE,cAAC,IAAD,CAAMD,UAAU,OAAOE,GAAG,QAA1B,4B,OEIOC,MAhBf,WAEE,OACE,qBAAKH,UAAU,MAAf,SACE,cAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,IAAIC,UAAWC,OCGxBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fcd63092.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport './Landing.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { getRecipes, getDiets } from '../../redux/actions';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nfunction LandingPage ( { getRecipes, getDiets }) {\r\n  useEffect(() => {\r\n    getRecipes()\r\n    getDiets();\r\n  }, [getRecipes, getDiets])\r\n  return (\r\n    <div className='LandingPage'>\r\n      <div id='info'>\r\n      <h1 id='AppTitle'>The Food App</h1>\r\n      <button id='HomeButton'>\r\n        <Link className='Link' to='/home'>\r\n        HOME\r\n        </Link>\r\n      </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    getDiets: () => dispatch(getDiets()),\r\n    getRecipes: () => dispatch(getRecipes())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(LandingPage)","import axios from 'axios';\r\n\r\n\r\nexport function getRecipes() {\r\n  return function (dispatch) {\r\n    axios.get('/recipe')\r\n      .then(res => dispatch({\r\n        type: 'ALL_RECIPES',\r\n        payload: res.data\r\n      })\r\n      ).catch(err => {\r\n        console.error(err)\r\n      });\r\n  };\r\n};\r\n\r\nexport function searchRecipes(recipe) {\r\n  if (recipe !== '') {\r\n    return function (dispatch) {\r\n      axios.get(`/recipe?name=${recipe}`)\r\n        .then(res => dispatch({\r\n          type: 'SEARCH_RECIPES',\r\n          payload: res.data\r\n        })\r\n        ).catch(err => {\r\n          console.error(err)\r\n        });\r\n    };\r\n  } else {\r\n    return {\r\n      type: 'SEARCH_RECIPES',\r\n      payload: []\r\n    }\r\n  };\r\n};\r\n\r\nexport function searchRecipeDetail(recipeId) {\r\n  return function (dispatch) {\r\n    axios.get(`/recipe/${recipeId}`)\r\n      .then(res => dispatch({\r\n        type: 'SEARCH_RECIPE_DETAIL',\r\n        payload: res.data\r\n      })\r\n      ).catch(err => {\r\n        console.error(err)\r\n      });\r\n  };\r\n};\r\n\r\nexport function addRecipe({ title, summary, spoonacularScore, healthScore, instructions, diets }) {\r\n  return function (dispatch) {\r\n    const Recipe = {title, summary, spoonacularScore, healthScore, instructions, diets };\r\n    axios.post('/recipe/', Recipe)\r\n      .then(res => dispatch({\r\n        type: 'ADD_RECIPE',\r\n        payload: res.data\r\n      })\r\n      ).catch(err => {\r\n        console.error(err)\r\n      });\r\n  }\r\n}\r\n\r\n\r\nexport function getDiets() {\r\n  return function (dispatch) {\r\n    axios.get('/types')\r\n      .then(res => dispatch({\r\n        type: 'ALL_DIETS',\r\n        payload: res.data\r\n      })\r\n      ).catch(err => {\r\n        console.error(err)\r\n      });\r\n  };\r\n};","import './App.css';\r\nimport './components/Landing/Landing'\r\nimport landing from './components/Landing/Landing';\r\nimport {Route} from 'react-router-dom'\r\n\r\nfunction App() {\r\n  // const routes = ['/home', '/about', '/recipe/:recipeId', '/newRecipe']\r\n  return (\r\n    <div className=\"App\">\r\n      <Route exact path='/' component={landing} />\r\n      {/* <Route path={routes} component={NavBar} />\r\n      <Route exact path={routes[0]} component={Recipes} />\r\n      <Route path={routes[1]} component={About} />\r\n      <Route path={routes[2]} component={Favorites} />\r\n      <Route path={routes[3]} component={RecipeDetails} />\r\n      <Route path={routes[4]} component={NewRecipe} />\r\n      <Route path={routes[5]} component={Login} />  */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}